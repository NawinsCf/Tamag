# name: Deploy on release

# on:
#   release:
#     types: [published]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: Prepare deploy script
#         run: |
#           cat > deploy.sh <<'EOF'
#           set -e
#           cd ~/deploy
#           # pull the images defined in the prod compose file and start
#           docker compose -f docker-compose.prod.yml pull
#           docker compose -f docker-compose.prod.yml up -d
#           EOF

#       - name: Copy docker-compose.prod.yml to remote
#         uses: appleboy/scp-action@v0.1.5
#         with:
#           host: ${{ secrets.DEPLOY_HOST }}
#           username: ${{ secrets.DEPLOY_USER }}
#           key: ${{ secrets.DEPLOY_SSH_KEY }}
#           port: ${{ secrets.DEPLOY_SSH_PORT }}
#           source: "docker-compose.prod.yml"
#           target: "~/deploy/docker-compose.prod.yml"

#       - name: Copy deploy script to remote
#         uses: appleboy/scp-action@v0.1.5
#         with:
#           host: ${{ secrets.DEPLOY_HOST }}
#           username: ${{ secrets.DEPLOY_USER }}
#           key: ${{ secrets.DEPLOY_SSH_KEY }}
#           port: ${{ secrets.DEPLOY_SSH_PORT }}
#           source: "deploy.sh"
#           target: "~/deploy/deploy.sh"

#       - name: Remote deploy (write .env, optional login, pull & start)
#         uses: appleboy/ssh-action@v0.1.8
#         with:
#           host: ${{ secrets.DEPLOY_HOST }}
#           username: ${{ secrets.DEPLOY_USER }}
#           key: ${{ secrets.DEPLOY_SSH_KEY }}
#           port: ${{ secrets.DEPLOY_SSH_PORT }}
#           script: |
#             set -e
#             mkdir -p ~/deploy
#             # write .env only if provided
#             if [ -n "${{ secrets.PROD_DOTENV }}" ]; then
#               printf '%s\n' "${{ secrets.PROD_DOTENV }}" > ~/deploy/.env
#             fi

#             chmod +x ~/deploy/deploy.sh || true

#             # if DOCKER_* creds provided, login on remote to pull private images
#             if [ -n "${{ secrets.DOCKER_USERNAME }}" ] && [ -n "${{ secrets.DOCKER_PASSWORD }}" ]; then
#               echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin || {
#                 echo "Docker login failed" >&2
#                 exit 1
#               }
#             fi

#             # run deploy script (will docker compose pull && up -d)
#             ~/deploy/deploy.sh

#             # logout if we logged in
#             if [ -n "${{ secrets.DOCKER_USERNAME }}" ] && [ -n "${{ secrets.DOCKER_PASSWORD }}" ]; then
#               docker logout || true
#             fi
